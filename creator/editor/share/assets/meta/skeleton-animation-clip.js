"use strict";const t=require("fire-fs"),{promisify:e}=require("util"),{type2size:a,compType2Array:i}=require("./utils/gltf");function r(t,e,r){let s=t.accessors[e],n=t.bufferViews[s.bufferView],u=r[n.buffer].buffer,o=a[s.type];return new(0,i[s.componentType])(u,n.byteOffset+s.byteOffset,s.count*o)}module.exports=class extends Editor.metas.asset{constructor(t){super(t),this._buffer=null,this.modelUuid="",this.animationID=-1,this.name="",this.maxFrameCount=0,this.totalFrameCount=0,this.duration=0,this.animationFrameRate=30}static version(){return"1.0.1"}static defaultType(){return"skeleton-animation-clip"}import(t,e){if(this._assetdb.isSubAssetByPath(t))return e();e()}async importGltf(t,e){let a=t.animations[this.animationID],i=t.nodes,s=a.samplers,n=a.channels,u=0,o={},l=0,f=0;for(let a=0;a<n.length;++a){let l=n[a],f=s[l.sampler],h=r(t,f.input,e),c=r(t,f.output,e),m=l.target,p=i[m.node].path;o[p]||(o[p]={});let d=o[p],b="",v=0;if("translation"===m.path?(b="position",v=3):"rotation"===m.path?(b="quat",v=4):"scale"===m.path&&(b="scale",v=3),!b)continue;let g=d[b]=[];for(let t=0;t<h.length;t++){let e=h[t];u=Math.max(e,u);let a=t*v,i=[];for(let t=0;t<v;t++)i[t]=c[a+t];g.push({frame:e,value:i})}}for(let t in o){let e=o[t];for(let t in e){let a=e[t];this.mergeFrames(a,t),l=Math.max(l,a.length),f+=a.length}}this._makeSureJointHasCurves(o,i),this._buffer=this.generateBuffer(o),this.maxFrameCount=l,this.totalFrameCount=f,this.duration=u,await this.save()}_makeSureJointHasCurves(t,e){for(let a=0;a<e.length;a++){let i=e[a],r=i.path;if(""===r)continue;t[r]||(t[r]={});let s=t[r];s.quat||(s.quat=[{frame:0,value:i.quat}]),s.scale||(s.scale=[{frame:0,value:i.scale}]),s.position||(s.position=[{frame:0,value:i.position}])}}generateBuffer(t){let e=[],a={};for(let i in t){let r=t[i],s={};for(let t in r){let a=r[t];s[t]={offset:e.length,frameCount:a.length};for(let t=0;t<a.length;t++){let i=a[t];e.push(i.frame),e.push(...i.value)}}a[i]=s}return e=new Float32Array(e),{description:a,buffer:e=new Buffer(new Uint8Array(e.buffer))}}mergeFrames(t,e){function a(t,e,a){return a=a||1e-4,Math.abs(e-t)<a}function i(t,e,i,r,s,n){let u=t.length,o=(s-r)/(n-r);for(let r=0;r<u;r++){let s=t[r]+(i[r]-t[r])*o;if(!a(e[r],s))return!1}return!0}let r=cc.quat(),s=cc.quat(),n=cc.quat(),u=cc.quat();function o(t,e,i,o,l,f){cc.vmath.quat.set(r,t[0],t[1],t[2],t[3]),cc.vmath.quat.set(s,e[0],e[1],e[2],e[3]),cc.vmath.quat.set(n,i[0],i[1],i[2],i[3]);let h=(l-o)/(f-o);return r.lerp(n,h,u),a(u.x,s.x)&&a(u.y,s.y)&&a(u.z,s.z)&&a(u.w,s.w)}for(let a=1;a<t.length-1;a++){let r,s=t[a-1],n=t[a],u=t[a+1],l=s.frame,f=n.frame,h=u.frame;"scale"===e||"position"===e?r=i:"quat"===e&&(r=o),r(s.value,n.value,u.value,l,f,h)&&t.splice(a--,1)}}async save(){let a=new(Editor.require("unpack://engine-dev/cocos2d/core/3d/skeleton/CCSkeletonAnimationClip"));a.name=this.name,a._setRawAsset(".bin"),a.description=this._buffer.description,a._duration=this.duration,a.wrapMode=cc.WrapMode.Loop,a.sample=this.animationFrameRate,this._assetdb.saveAssetToLibrary(this.uuid,a);let i=this._assetdb._uuidToImportPathNoExt(this.uuid)+".bin";await e(t.writeFile)(i,this._buffer.buffer)}};