"use strict";var e=require("fire-fs"),t=require("fire-path"),r=require("./custom-asset"),a=require("semver");const i=["totalParticles","duration","emissionRate","life","lifeVar","angle","angleVar","startSize","startSizeVar","endSize","endSizeVar","startSpin","startSpinVar","endSpin","endSpinVar","sourcePos","posVar","gravity","speed","speedVar","tangentialAccel","tangentialAccelVar","radialAccel","radialAccelVar","rotationIsDir","startRadius","startRadiusVar","endRadius","endRadiusVar","rotatePerS","rotatePerSVar"],s=["premultipliedAlpha"];async function n(e,t){for(var r=JSON.stringify(e),a=0,i=t.length;a<i;++a)r=r.replace(new RegExp("_"+t[a],"g"),t[a]);return JSON.parse(r)}class o extends r{constructor(e){super(e),this.asyncLoadAssets=!1,this.autoReleaseAssets=!1}static version(){return"1.2.1"}async import(r,a){e.readJson(r,async(e,i)=>{if(e)return a&&a(e),void 0;if(i){i=await o.verify(r,i),i=await o.migrate(r,i,this.uuid);var s=Editor.serialize.findRootObject(i,"cc.SceneAsset");s?s.asyncLoadAssets=this.asyncLoadAssets:Editor.warn(`Can not find scene assset in the scene file "${r}", it maybe corrupted!`);var n=Editor.serialize.findRootObject(i,"cc.Scene");n?(n.autoReleaseAssets=this.autoReleaseAssets,n._scale&&(n._scale.z=1)):Editor.warn(`Can not find scene in the scene file "${r}", it maybe corrupted!`),Editor.serialize.setName(i,t.basenameNoExt(r)),this._assetdb.saveAssetToLibrary(this.uuid,i)}a&&a(e)})}static defaultType(){return"scene"}static async verify(t,r){let a=!1;if(Array.isArray(r))for(var i=0;i<r.length;++i){var s=r[i];"cc.Node"!==s.__type__||void 0===s._components||Array.isArray(s._components)||(s._components=[],a=!0,Editor.warn(Editor.T("MESSAGE.scene.verify_compoents_warn",{name:s._name})))}return a&&e.writeFileSync(t,JSON.stringify(r,null,2)),r}static async migrate(t,r,c){let l=o.version();try{var d=e.readJsonSync(t+".meta");d&&(l=d.ver)}catch(e){return r}let _=!1;return a.satisfies(l,"< 1.0.1",{includePrerelease:!0})&&(r=await async function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var r=e[t];"cc.ParticleSystem"===r.__type__?e[t]=await n(r,i):"sp.Skeleton"===r.__type__&&(e[t]=await n(r,s))}return e}(r),_=!0),a.satisfies(l,"< 1.0.2",{includePrerelease:!0})&&(r=await async function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var r=e[t];"cc.LightComponent"===r.__type__&&(r.__type__="cc.Light")}return e}(r),_=!0),a.satisfies(l,"< 1.1.0",{includePrerelease:!0})&&(r=await async function(e,t){if(Array.isArray(e))for(var r=0;r<e.length;r++){var a=e[r];"cc.ParticleSystem"===a.__type__&&0===a.positionType&&(a.positionType=1,Editor.warn(Editor.T("IMPORT_ASSET.parse_particle_positionType",{url:Editor.assetdb.uuidToUrl(t),nodeName:e[a.node.__id__]._name})))}return e}(r,c),_=!0),a.satisfies(l,"< 1.2.1",{includePrerelease:!0})&&(r=await async function(e,t){if(Array.isArray(e))for(var r=0;r<e.length;r++){var a=e[r];if("cc.Node"===a.__type__)if(void 0!==a._rotationX||void 0!==a._rotationY){if(0!==a._rotationX||0!==a._rotationY){let e=cc.v3();a._rotationX===a._rotationY?e.z=-a._rotationX:(e.x=a._rotationX,e.y=a._rotationY),a._eulerAngles=Editor.serialize(e,{stringify:!1})}a._rotationX=a._rotationY=void 0}else void 0!==a._quat&&(a._eulerAngles=Editor.serialize(cc.vmath.quat.toEuler(cc.v3(),a._quat),{stringify:!1}),a._quat=void 0)}return e}(r),_=!0),_&&e.writeFileSync(t,JSON.stringify(r,null,2)),r}}module.exports=o;