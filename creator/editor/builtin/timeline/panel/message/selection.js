"use strict";const e=require("../libs/advice"),{promisify:i}=require("util"),t=require("../libs/dump");let r=null;module.exports={selected(e,i,r){"node"===i&&t.update(()=>{this.vm.updateState()})},unselected(e,i){"node"===i&&t.update()},async activated(a,h,d){if("node"!==h||!d)return;if(clearTimeout(r),this.vm&&this.vm.hierarchy.some(i=>i.id===d&&(e.emit("change-node",i),!0)),!this.vm||this.vm.record)return;let n=await i(Editor.Ipc.sendToPanel)("scene","scene:query-animation-hierarchy",d);n=JSON.parse(n),this.vm.hierarchy&&this.vm.hierarchy[0]&&n[0].id===this.vm.hierarchy[0].id||(e.emit("change-hierarchy",function(e){let i=[];for(;i.length;)i.pop();let t=function(e,r,a){a=`${a}/${e.name}`,i.push({id:e.id,path:a,name:e.name,level:r,state:0}),e.children&&e.children.forEach(e=>{t(e,r+1,a)})};return e.forEach(e=>{t(e,0,"")}),i}(n)),t.root=n[0].id,this.vm.updateClips())},deactivated(i,a,h){if("node"===a&&h)return this.vm.record?(r=setTimeout(()=>{e.emit("change-node",{id:"",path:"////"})},100),void 0):(r=setTimeout(()=>{e.emit("change-hierarchy",[]),t.root="",this.vm.updateClips()},100),void 0)}};