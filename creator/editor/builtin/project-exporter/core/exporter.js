const e=require("fire-path"),t=require("fire-fs"),r=require("electron").ipcMain,s=require("async"),i=(require("lodash"),require("globby")),o=require("gulp").Gulp,n=require("gulp-sequence"),a=require("del"),u=require("./asset-settings"),d=require("./export-task-manager");function p(t,r){return e.stripExt(t)+r}const f=!1,c=!1,l="import",v="export",E=4;function b(b,g,x){c&&Editor.warn("skip rebuild");var m=e.join(b,"__temp__");let w=g.scenes;function k(e){q.isRunning?q.stop(e):Editor.error(e)}var y,h,q=new o,j=n.use(q);function _(t){var r=b,s=Editor.assetdb.mountInfoByPath(t);s?r=e.join(r,s.mountPath):Editor.error("Can not get mount info of "+t);var i=Editor.assetdb.getRelativePath(t);return e.resolve(r,i)}q.task("clean",function(){var t=[e.join(b,"**/*")];return c&&(t=[t,"!"+m]),Editor.log("Delete "+t),a(t,{force:!0})}),q.task("get-scenes",function(e){w||c?e():Editor.assetdb.queryAssets(null,"scene",function(t,r){if(t)return k(t);w=r.map(e=>e.uuid),e()})}),q.task("build-assets",["get-scenes"],function(e){if(c)return e();var t;y=null;function s(r,s){if(t&&!f){var i=t;t=null,i.nativeWin.destroy()}q.isRunning?e(new Error(s)):Editor.error(s)}r.once("app:build-project-abort",s);var i=!1;Editor.App.spawnWorker("app://editor/page/build/build-worker",function(o,n){var a;t=o,i||(i=!0,n.once("closed",function(){a||(r.removeListener("app:build-project-abort",s),e())})),t.send("app:init-build-worker",v,!0,function(e){function r(){!t||f||(t.close(),t=null)}e?(k(e),a=!0,r()):t&&t.send("app:build-assets",m,v,!0,{scenes:w,inlineSpriteFrames:!1,mergeStartScene:!1,optimizeHotUpdate:!1},function(e,t,s,i){e?(k(e),a=!0):t&&(y=Object.keys(t),h=i),r()},-1)},-1)},f,!0)});var T=new d,U=[];function A(e){var t=Editor.assetdb.uuidToFspath(e);if(!t)return Editor.error("Can not get fspath of "+e),void 0;var r=_(t);T.add(t,r,!0,e)}q.task("parse-assets",["build-assets"],function(t){var r=e.join(m,l,"??/*");i(r,{nodir:!0},function(r,s){if(r)return t(r);for(var i=0;i<s.length;i++){var o=s[i],n=e.basenameNoExt(o),a=Editor.assetdb.assetInfoByUuid(n);if(a){var d=u[a.type];if(d&&d.exportRaw)A(n),d.exportMetaIfExportRaw&&U.push(n);else{var f=a.path,c="";if(a.isSubAsset){var l=e.dirname(f),v=e.basenameNoExt(l),E=e.basename(f);if(v!==E)c=_(e.stripExt(l)+"_"+E+e.extname(l));else c=_(l);var b=d&&d.extnameForSubAsset;b||(b=".json",Editor.warn(`export sub asset as ${b} file (${f})`)),c=p(c,b)}else c=_(f);T.add(o,c,!1,n)}}else Editor.error("Can not get asset info of "+n)}t()})}),q.task("parse-raw-assets",["build-assets"],function(t){for(let e=0;e<y.length;e++){let t=y[e],r=Editor.assetdb.assetInfoByUuid(t);if(r)if(r.type){{let e=Editor.assets[r.type];if(e&&!cc.RawAsset.isRawAssetType(e))continue}A(t)}else Editor.error("Can not get asset type of "+t);else Editor.error("Can not get asset info of "+t)}for(let t in h){let r=h[t];if("cc.Texture2D"===r[1]){let s=r[0],i=e.resolve(m,e.join("raw-assets",s)),o=e.resolve(b,e.join("assets",s));T.add(i,o,!0,t)}else Editor.error(`Unknown asset in packedAutoAtlasAssets to copy: ${r}`)}t()});var R=/{\s*"__uuid__": ?"([^"]+)"\s*}/g;var S=/(\B")_N\$(?=\w+":\s*[^\s:,}\]])/g;q.task("export-(raw-)assets",["parse-assets","parse-raw-assets"],function(r){for(var i=0;i<U.length;i++){var o=U[i],n=T.uuidToTask[o];T.add(n.src+".meta",n.dest+".meta",!0)}s.forEachOfLimit(T.destToTask,E,(r,s,i)=>{var o;if(r.uuid){var n=Editor.assetdb.assetInfoByUuid(r.uuid);if(n){var a=u[n.type];o=a&&a.customUuidParser}}r.isRaw&&!o?t.copy(r.src,r.dest,e=>{if(e)return k(e);i()}):t.readFile(r.src,"utf8",(s,n)=>{if(s)return k(s);n=(o||function(t,r,s,i){return t.replace(R,function(t,r){var o=s[r]||s[Editor.Utils.UuidUtils.decompressUuid(r)];if(o){var n=o.dest;return n=e.relative(i,n),Editor.isWin32&&(n=n.replace(/\\/g,"/")),JSON.stringify(n)}return console.log("can not parse uuid",r),t})})(n,r.uuid,T.uuidToTask,b),r.isRaw||(n=function(e){return e.replace(S,"$1")}(n)),t.ensureDir(e.dirname(r.dest),e=>{if(e)return k(e);t.writeFile(r.dest,n,e=>{if(e)return k(e);i()})})})},r)}),q.task("delete-temp",function(){var e=[m];return Editor.log("Delete "+e),a(e,{force:!0})}),q.task("export",j("clean","export-(raw-)assets","delete-temp")),q.start("export",x)}exports.export=function(t,r,s){"function"==typeof r&&(s=r,r=void 0),t=e.resolve(t),r=r||{},Editor.info(`starting export to ${t}`),b(t,r,e=>{e||Editor.info("finished export"),s&&s(e)})},exports._rapidTest=function(){const t=Editor.require("app://editor/builtin/project-exporter/core/exporter");let r=e.join(Editor.Project.path,"export");t.export(r,e=>{e&&Editor.error(e)})};