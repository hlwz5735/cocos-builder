"use strict";const e=require("fs"),t=Editor.require("packages://console/panel/utils/cache"),o=Editor.require("packages://console/panel/utils/event"),a=Editor.require("packages://console/panel/component/console");Editor.Panel.extend({style:e.readFileSync(Editor.url("packages://console/panel/style/index.css")),template:a.template,listeners:{"panel-resize"(){this._vm.length=(this.clientHeight-56)/20+3},"panel-show"(){this._vm.length=(this.clientHeight-56)/20+3}},messages:{"editor:console-log"(e,o){t.add({type:"log",message:o})},"editor:console-success"(e,o){t.add({type:"success",message:o})},"editor:console-failed"(e,o){t.add({type:"failed",message:o})},"editor:console-info"(e,o){t.add({type:"info",message:o})},"editor:console-warn"(e,o){t.add({type:"warn",message:o})},"editor:console-error"(e,o){t.add({type:"error",message:o})},"editor:console-clear"(e,o,a){t.clear(o,a)},"console:query-last-error-log"(e){if(!e.reply)return;let o=t.query({collapse:this._vm.collapse,type:"error"}),a=null;if(o.length){let e=o[0];a={type:e.type,message:`${e.message}\n${e.info.join("\n")}`}}e.reply(null,a)},"editor:console-on-device-play"(){this._vm.aclear&&Editor.Ipc.sendToMain("console:clear","^(?!.*?SyntaxError)",!0)}},ready(){let e=this.profiles.local;this._vm=new Vue({el:this.shadowRoot.querySelector(".console"),data:a.data(),components:a.components,methods:a.methods,created:a.created}),Editor.Ipc.sendToMain("editor:console-query",(e,o)=>{o.forEach(t.add)}),this._vm.fsize=e.data.fontsize,this._vm.collapse=e.data.collapse,this._vm.aclear=e.data.aclear,t.changeHeight(2*e.data.fontsize);let s=()=>{let e=this.clientHeight;if(e<20)return requestAnimationFrame(s);this._vm.length=(e-56)/20+3};requestAnimationFrame(s);let l=null,n=function(){clearTimeout(l),l=setTimeout(()=>{e.save()},300)};o.on("font-size-changed",o=>{e.data.fontsize=o,t.changeHeight(2*o),n()}),o.on("collapse-changed",t=>{e.data.collapse=t,n()}),o.on("auto-clear-changed",t=>{e.data.aclear=t,n()})},selectAll(){},clear(){}});