const e=Editor.require("unpack://engine-dev/cocos2d/core/physics/CCPolygonSeparator");function t(e,t){if(0===e.width&&0===e.height)return t(null,[cc.v2(-50,-50),cc.v2(50,-50),cc.v2(50,50),cc.v2(-50,50)]);var r=-e.anchorX*e.width,i=-e.anchorY*e.height,o=r+e.width,n=i+e.height;t(null,[cc.v2(r,i),cc.v2(r,n),cc.v2(o,n),cc.v2(o,i)])}function r(r,i,o){var n=r.getComponent(cc.Sprite);if(!n)return t(r,o);var h=n.spriteFrame;if(!h)return t(r,o);var c=h._textureFilename;if(!c)return t(r,o);var u=require("./marching-squares"),d=require("./rdp"),a=require(Editor.url("app://editor/share/sharp")),g=h.getRect();a(c).extract({left:g.x,top:g.y,width:g.width,height:g.height}).raw().toBuffer((t,n)=>{if(t)return o(t);var h=u.getBlobOutlinePoints(n,g.width,g.height,i.loop);(h=d(h,i.threshold)).length>0&&h[0].equals(h[h.length-1])&&(h.length-=1),h.forEach(e=>{e.y=g.height-e.y,e.x*=r.width/g.width,e.y*=r.height/g.height,e.x-=r.anchorX*r.width,e.y-=r.anchorY*r.height}),e.ForceCounterClockWise(h),o&&o(null,h)})}module.exports={getContourPoints:r,resetPoints:function(e,t){r(e.node,t,(t,r)=>{if(t)return Editor.error(t);_Scene.Undo.recordNode(e.node.uuid),e.points=r,_Scene.Undo.commit()})}};