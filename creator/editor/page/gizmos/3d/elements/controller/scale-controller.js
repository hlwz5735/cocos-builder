"use strict";const e=cc.vmath.vec3;let t=require("./controller-base"),s=require("../utils/controller-utils");const i=require("../../../utils/external").NodeUtils;module.exports=class extends t{constructor(e){super(e),this._deltaScale=cc.v3(0,0,0),this._scaleFactor=125,this.initShape()}initShape(){this.createShapeNode("ScaleController"),this.registerSizeChangeEvents(),this._baseCubeSize=25,this._baseAxisLength=140,this._axisSliderNodes={};let e=s.scaleSlider(25,140,cc.Color.RED);e.name="xSlider",e.parent=this.shape,i.setEulerAngles(e,cc.v3(-90,-90,0)),this.initAxis(e,"x");let t=s.scaleSlider(25,140,cc.Color.GREEN);t.name="ySlider",t.parent=this.shape,this.initAxis(t,"y");let a=s.scaleSlider(25,140,cc.Color.BLUE);a.name="zSlider",a.parent=this.shape,i.setEulerAngles(a,cc.v3(90,0,90)),this.initAxis(a,"z");let l=s.cube(25,25,25,cc.Color.GRAY);l.name="xyzScale",l.parent=this.shape,this._axisDir.xyz=cc.v3(1,1,1),this.initAxis(l,"xyz"),this.shape.active=!1}onInitAxis(e,t){if("xyz"===t)return;let s={};s.head=e.getChildByName("ScaleSliderHead"),s.body=e.getChildByName("ScaleSliderBody"),this._axisSliderNodes[t]=s}onAxisSliderMove(e,t){for(let s=0;s<e.length;s++){let i=e.charAt(s);if(null==i)return;let a=this._axisSliderNodes[i].head,l=this._axisSliderNodes[i].body,o=this._baseAxisLength+t,r=o/this._baseAxisLength;l.setScale(r,1,1),a.setPosition(0,o,0)}}getAlignAxisDeltaScale(t,s){let i=this._axisDir[t],a=this.getAlignAxisMoveDistance(this.localToWorldDir(i),s),l=cc.v3(),o=a/this._scaleFactor;return e.scale(l,i,o),this.onAxisSliderMove(t,a),l}getAllAxisDeltaScale(e,t){let s=0,i=!1,a=Math.abs(t.x),l=Math.abs(t.y);Math.abs(a-l)/Math.max(a,l)>.1&&a<l&&(i=!0);let o=t.mag();s=i?Math.sign(t.y)*o:Math.sign(t.x)*o,this._cubeDragValue+=s;let r=this._cubeDragValue/this._scaleFactor,h=cc.v3(r,r,r);return this.onAxisSliderMove(e,this._cubeDragValue),h}onMouseDown(e){this._deltaScale=cc.v3(0,0,0),this._mouseDeltaPos=cc.v2(0,0),this._cubeDragValue=0,cc.game.canvas.style.cursor="pointer",this._moveAxisName=e.axisName,this.onAxisSliderMove(e.axisName,0),null!=this.onControllerMouseDown&&this.onControllerMouseDown()}onMouseMove(t){this._mouseDeltaPos.x+=t.moveDeltaX,this._mouseDeltaPos.y+=t.moveDeltaY,e.set(this._deltaScale,0,0,0),"xyz"===t.axisName?this._deltaScale=this.getAllAxisDeltaScale(t.axisName,cc.v2(t.moveDeltaX,t.moveDeltaY)):this._deltaScale=this.getAlignAxisDeltaScale(t.axisName,this._mouseDeltaPos),null!=this.onControllerMouseMove&&this.onControllerMouseMove(t),this.updateController()}onMouseUp(e){cc.game.canvas.style.cursor="default",this.onAxisSliderMove(this._moveAxisName,0),null!=this.onControllerMouseUp&&this.onControllerMouseUp()}onMouseLeave(){this.onMouseUp()}onHoverIn(e){this.setAxisColor(e.axisName,s.YELLOW)}onHoverOut(){this.resetAxisColor()}getDeltaScale(){return this._deltaScale}onShow(){this.is2D?(this._axisDataMap.z.topNode.active=!1,this.updateController()):this._axisDataMap.z.topNode.active=!0}};