"use strict";const e=require("iconv-lite"),r=require("fire-path"),o=require("fire-fs"),t=require("del"),i=require("child_process").spawn,n=require("tree-kill"),a=require("async"),s=require("electron"),l=require("globby"),c=require("xxtea-node"),d=require("zlib"),{promisify:p}=require("util"),u=Editor.require("app://share/engine-utils");let f=r.join(Editor.App.home,"logs/native.log"),m=Editor.App._profile.data["show-console-log"];let g,E,j,y,S,h,w,v,O,_,C,x,b,P,A,k,$,R,I=-1,F=-1,L="",M=Editor.url("unpack://utils/Python27/python");function D(){let e=Editor.Profile.load("profile://local/settings.json"),r=e.data;return!1!==e.data["use-global-engine-setting"]&&(r=Editor.Profile.load("profile://global/settings.json").data),r["use-default-cpp-engine"]?Editor.builtinCocosRoot:r["cpp-engine-path"]}function T(e,o){var t;let n=N();if(n)return[n,t];e=[y].concat(e);try{if("darwin"===process.platform)t=i("sh",e,o);else{let n=e.indexOf("--env"),a="COCOS_PYTHON_HOME="+r.dirname(M);n>=0?n===e.length-1?e.push(a):e[n+1]+=";"+a:(e.push("--env"),e.push(a)),t=i(M,e,o)}}catch(e){n=e}return{error:n,child:t}}function N(){return j=D(),console.log("Cocos2dx root: "+j),-1!==j.indexOf(" ")?new Error(`Cocos2dx root [${j}] can't include space.`):(E=r.join(j,"tools/cocos2d-console/bin"),y="darwin"===process.platform?r.join(E,"cocos"):r.join(E,"cocos.py"),null)}function K(e,t){if(w=e.platform,!(b=e.template))return t&&t(new Error("Template is empty, please select a template.")),void 0;v=e.buildPath,O=e.dest,_=e.projectName||e.title||r.basename(e.project),C=e.packageName||"com.fireball."+_,x=e.debug,P=e.useDebugKeystore,A=P?Editor.url("unpack://static/build-templates/native/debug.keystore"):e.keystorePath,"win32"===process.platform&&(A=A.replace(/\\/g,"/")),k=P?123456:e.keystorePassword,$=P?"debug_keystore":e.keystoreAlias,R=P?123456:e.keystoreAliasPassword;let n=function(e){e=e||{};let t=Editor.App._profile.data;m=t["show-console-log"];let i=N();if(i)return i;let n=e.ndkRoot||t["ndk-root"],a=e.androidSDKRoot||t["android-sdk-root"];S={COCOS_FRAMEWORKS:r.join(j,"../"),COCOS_X_ROOT:j,COCOS_CONSOLE_ROOT:E,NDK_ROOT:n,ANDROID_SDK_ROOT:a},h="";for(let e in S)""!==h&&(h+=";"),h+=`${e}=${S[e]}`;function s(e,r){return r?o.existsSync(r)?null:new Error(`Can't find [${e}] path: ${r}`):new Error(`[${e}] is empty, please set [${e}] in Preferences.`)}if(console.log(`native environment string : ${h}`),i=s("Cocos Console Root",E))return i;if(!o.existsSync(y))return new Error(`Can't find Cocos Console Bin: ${y}`);if("android"===w||"android-instant"===w){if(i=s("NDK Root",n))return i;if(i=s("Android SDK Root",a))return i;if(!("win32"!==process.platform||process.env.JAVA_HOME&&o.existsSync(process.env.JAVA_HOME)))return new Error("Please make sure java is installed and JAVA_HOME is in your environment")}return null}(e);return n?(t&&t(n),void 0):(n=function(){if(-1===w.indexOf("android")||P)return null;if(!A)return new Error("Keystore Path is empty, please set Keystore path");if(!o.existsSync(A))return new Error(`Keystore Path [${A}] is not exists, please check Keystore path`);if(!k)return new Error("Keystore Password is empty, please set Keystore Password");if(!$)return new Error("Keystore Alias is empty, please set Keystore Alias");if(!R)return new Error("Keystore Alias Password is empty, please set Keystore Alias Password");return null}())?(t&&t(n),void 0):(a.series([e=>{if("win32"===process.platform)return e(),void 0;try{let r,o=i("python",["-V"]);o.stderr.on("data",function(e){let r=e.toString();"3"===(r=r.replace("Python ","").replace("\n",""))[0]?Editor.warn(`Checked Python Version [${r}], please use python 2.x.x version. Recommend [2.7.5] version`):Editor.log(`Checked Python Version [${r}]`)}),o.on("error",function(){r=new Error("Can't find python, please install python or check your environment")}),o.on("close",function(){e(r)})}catch(r){e(new Error("Can't find python, please install python or check your environment"))}},e=>{let r=T(["-v"]);if(r.error)return e(r.error);let o=r.child;o.stdout.on("data",function(e){g=e.toString()}),o.stderr.on("data",function(e){Editor.failed(e.toString())}),o.on("close",function(){e()}),o.on("error",function(r){e(r)})},e=>{let t=r.join(E,"../../../"),i=r.join(t,"version"),n=r.join(t,"cocos/cocos2d.cpp"),a=r.join(t,"frameworks/js-bindings/bindings/manual/ScriptingCore.h");if(o.existsSync(i))L=o.readFileSync(i,"utf8");else{let e=null,r=null;if(o.existsSync(n)?(e=n,r='.*return[ \t]+"(.*)";'):o.existsSync(a)&&(e=a,r='.*#define[ \t]+ENGINE_VERSION[ \t]+"(.*)"'),e){let t=o.readFileSync(e,"utf8").match(r);t&&(L=t[1])}}if(L){let e=L.match("([0-9]+)[.]([0-9]+)");e&&(I=parseInt(e[1]),F=parseInt(e[2]))}e()}],e=>{t&&t(e)}),void 0)}function B(e,t){let i=require("ini"),n=r.join(e,"cocos2d.ini");if(!o.existsSync(n))return Editor.failed(`Can't find ${n}`),null;let a=i.parse(o.readFileSync(n,"utf-8"));a.paths.templates||(a.paths.templates="../../../templates"),a.engineMode=a.global.cocos2d_x_mode,a.templatesPath=r.join(e,a.paths.templates);let s=r.join(a.templatesPath,"js-template-*");a.templates=[],l(s,(e,o)=>{o.forEach(e=>{e=r.normalize(e);let o=r.basename(e);o=o.replace("js-template-",""),a.templates.push(o)}),t&&t(a)})}const U=23;const V=26;function J(e){let r="utf-8",t=o.readFileSync(Editor.url("unpack://utils/locale-encoding.py"));try{let o;try{o="darwin"===process.platform?i("python",["-c",t]):i(M,["-c",t])}catch(r){return e&&e(r),void 0}o.stdout.on("data",function(e){let o=e.toString();o&&(r=o)}),o.stderr.on("data",function(e){Editor.failed(e.toString())}),o.on("close",function(){e&&e(null,r)}),o.on("error",function(r){e&&e(r)})}catch(o){Editor.log("Get locale encoding failed, use utf-8 encoding"),e&&e(null,r)}}function q(r,t,i){let n="utf-8",a={logFilePath:f,disableEditorLog:!m,useSystemEncoding:!0,prefix:""};function s(){let a;t.logFilePath&&(o.ensureFileSync(t.logFilePath),a=o.createWriteStream(t.logFilePath,{defaultEncoding:n})),r.stdout.on("data",r=>{if(a&&a.write(r),t.disableEditorLog)return;let o;(o="win32"===process.platform?e.decode(r,n):r.toString()).length>1&&(o=o.replace(/\n*$/g,"")),o.split("\n").forEach(e=>{t.prefix&&(e=t.prefix+" : "+e),Editor.log(e)})}),r.stderr.on("data",r=>{if(a&&a.write(r),t.disableEditorLog)return;let o;o="win32"===process.platform?e.decode(r,n):r.toString(),t.prefix&&(o=t.prefix+" : "+o),-1!==o.toLowerCase().indexOf("warning")?Editor.warn(o):Editor.failed(o)}),r.on("close",(e,o)=>{a&&a.close(),i.call(r,null,e,o)}),r.on("error",function(e){i.call(r,e)})}if("function"==typeof t?(i=t,t=a):t=Object.assign(a,t),t.useSystemEncoding)return J((e,r)=>{n=r,s()}),void 0;s()}function H(){if("binary"!==b)return null;let e=r.join(j,"prebuilt",w);return o.existsSync(e)?null:new Error(`Can't find prebuilt libs for platform [${w}]. Please compile prebuilt libs first`)}function z(e){if(-1===w.indexOf("android"))return;P&&(A=Editor.url("unpack://static/build-templates/native/debug.keystore")),"win32"===process.platform&&(A=A.replace(/\\/g,"/"));let t=r.join(O,"frameworks/runtime-src/proj.android-studio/gradle.properties");if(o.existsSync(t)){let i=o.readFileSync(t,"utf-8");i=(i=(i=(i=(i=(i=i.replace(/RELEASE_STORE_FILE=.*/,`RELEASE_STORE_FILE=${A}`)).replace(/RELEASE_STORE_PASSWORD=.*/,`RELEASE_STORE_PASSWORD=${k}`)).replace(/RELEASE_KEY_ALIAS=.*/,`RELEASE_KEY_ALIAS=${$}`)).replace(/RELEASE_KEY_PASSWORD=.*/,`RELEASE_KEY_PASSWORD=${R}`)).replace(/PROP_TARGET_SDK_VERSION=.*/,`PROP_TARGET_SDK_VERSION=${X(e.apiLevel)}`)).replace(/PROP_COMPILE_SDK_VERSION=.*/,`PROP_COMPILE_SDK_VERSION=${X(e.apiLevel)}`);let n=e.appABIs&&e.appABIs.length>0?e.appABIs.join(":"):"armeabi-v7a";i=i.replace(/PROP_APP_ABI=.*/g,`PROP_APP_ABI=${n}`),o.writeFileSync(t,i),i="",i+=`ndk.dir=${S.NDK_ROOT}\n`,i+=`sdk.dir=${S.ANDROID_SDK_ROOT}`,"win32"===process.platform&&(i=(i=i.replace(/\\/g,"\\\\")).replace(/:/g,"\\:")),o.writeFileSync(r.join(r.dirname(t),"local.properties"),i)}}function W(){try{t.sync(r.join(O,"res"),{force:!0}),t.sync(r.join(O,"src"),{force:!0})}catch(e){Editor.error(e)}}function G(){let e=r.join(O,".cocos-project.json");if(!o.existsSync(e))return Editor.error(`Can't find project json [${e}]`),void 0;let t=JSON.parse(o.readFileSync(e)),i=t.projectName,n=t.packageName,a=i!==_,s=n!==C;if(!a&&!s)return;let l=r.join(O,"cocos-project-template.json");if(!o.existsSync(l))return Editor.error(`Can't find template json [${l}]`),void 0;let c,d=JSON.parse(o.readFileSync(l)).do_add_native_support;s&&(c=(c=(c=d.project_replace_package_name.files).concat(d.project_replace_mac_bundleid.files)).concat(d.project_replace_ios_bundleid.files)).forEach(function(e){let t=r.join(O,e);if(!o.existsSync(t))return Editor.error(`Can't not find file [${e}], replace package name failed`),void 0;let i=o.readFileSync(t,"utf8");i=i.replace(new RegExp(n,"gm"),C),o.writeFileSync(t,i)}),a&&((c=d.project_replace_project_name.files).forEach(e=>{let t=r.join(O,e.replace("PROJECT_NAME",i));if(!o.existsSync(t))return Editor.error(`Can't not find file [${t}], replace project name failed`),void 0;let n=o.readFileSync(t,"utf8");n=n.replace(new RegExp(i,"gm"),_),o.writeFileSync(t,n)}),(c=d.project_rename.files).forEach(e=>{let t=r.join(O,e.replace("PROJECT_NAME",i));if(!o.existsSync(t))return Editor.error(`Can't not find file [${t}], replace project name failed`),void 0;let n=r.join(O,e.replace("PROJECT_NAME",_));o.renameSync(t,n)})),t.projectName=_,t.packageName=C,o.writeFileSync(e,JSON.stringify(t,null,2))}function Y(e,t){const i=require("plist");let n=r.join(O,"frameworks/runtime-src/proj.ios_mac/ios/Info.plist");if(o.existsSync(n)){let r=o.readFileSync(n,"utf8"),t=i.parse(r),a=[];e.landscapeRight&&a.push("UIInterfaceOrientationLandscapeRight"),e.landscapeLeft&&a.push("UIInterfaceOrientationLandscapeLeft"),e.portrait&&a.push("UIInterfaceOrientationPortrait"),e.upsideDown&&a.push("UIInterfaceOrientationPortraitUpsideDown"),t.UISupportedInterfaceOrientations=a,r=i.build(t),o.writeFileSync(n,r)}let a=[r.join(O,"frameworks/runtime-src/proj.android-studio/app/AndroidManifest.xml"),r.join(O,"frameworks/runtime-src/proj.android-studio/game/AndroidManifest.xml")].filter(e=>o.existsSync(e));for(let r=0,i=a.length;r<i;r++){let i=a[r],n=i.indexOf("proj.android-studio")>=0,s=/android:screenOrientation=\"[^"]*\"/,l='android:screenOrientation="unspecified"';if(e.landscapeRight&&e.landscapeLeft&&e.portrait&&e.upsideDown)l='android:screenOrientation="fullSensor"';else if(e.landscapeRight&&!e.landscapeLeft)l='android:screenOrientation="landscape"';else if(!e.landscapeRight&&e.landscapeLeft)l='android:screenOrientation="reverseLandscape"';else if(e.landscapeRight&&e.landscapeLeft)l='android:screenOrientation="sensorLandscape"';else if(e.portrait&&!e.upsideDown)l='android:screenOrientation="portrait"';else if(!e.portrait&&e.upsideDown){let e="reversePortrait";t<16&&!n&&(e="reversePortait"),l=`android:screenOrientation="${e}"`}else if(e.portrait&&e.upsideDown){let e="sensorPortrait";t<16&&!n&&(e="sensorPortait"),l=`android:screenOrientation="${e}"`}let c=o.readFileSync(i,"utf8");c=c.replace(s,l),o.writeFileSync(i,c)}}function X(e){let r=e.match("android-([0-9]+)$"),o=-1;return r&&(o=parseInt(r[1])),o}var Q=[["USE_VIDEO","VideoPlayer"],["USE_WEB_VIEW","WebView"],["USE_EDIT_BOX","EditorBox"],["USE_AUDIO","AudioSource"],["USE_SPINE","Spine Skeleton"],["USE_DRAGONBONES","DragonBones"],["USE_SOCKET","Native Socket"]];function Z(e){let t=e.platform.toLowerCase();if("mac"===t){ee("link"===e.template?r.join(D(),"cocos/platform/mac/CCModuleConfigMac.debug.xcconfig"):r.join(O,"frameworks/cocos2d-x/cocos/platform/mac/CCModuleConfigMac.debug.xcconfig"),e),ee("link"===e.template?r.join(D(),"cocos/platform/mac/CCModuleConfigMac.release.xcconfig"):r.join(O,"frameworks/cocos2d-x/cocos/platform/mac/CCModuleConfigMac.release.xcconfig"),e)}else if("ios"===t){ee("link"===e.template?r.join(D(),"cocos/platform/ios/CCModuleConfigIOS.debug.xcconfig"):r.join(O,"frameworks/cocos2d-x/cocos/platform/ios/CCModuleConfigIOS.debug.xcconfig"),e),ee("link"===e.template?r.join(D(),"cocos/platform/ios/CCModuleConfigIOS.release.xcconfig"):r.join(O,"frameworks/cocos2d-x/cocos/platform/ios/CCModuleConfigIOS.release.xcconfig"),e)}else"android"===t||"android-instant"===t?function(e){let t="android-instant"===e.platform.toLowerCase()?"game/":"app/",i=r.join(O,`frameworks/runtime-src/proj.android-studio/${t}jni/Application.mk`);if(!o.existsSync(i))return Editor.failed(`Can not find file ${i}`),void 0;let n=o.readFileSync(i,"utf8");Q.forEach(r=>{(function(r){let o=-1!==e.excludedModules.indexOf(r[1]);-1===n.indexOf(r[0])?n+=`${r[0]} := ${o?0:1}\n`:n=n.replace(new RegExp(`${r[0]}\\s*:=\\s*(0|1)`,"g"),`${r[0]} := ${o?0:1}`)})(r)}),o.writeFileSync(i,n)}(e):"win32"===t&&function(e){}()}function ee(e,r){if(!o.existsSync(e))return Editor.failed(`Can not find file ${e}`),void 0;let t=o.readFileSync(e,"utf8");Q.forEach(e=>{(function(e){let o=-1!==r.excludedModules.indexOf(e[1]);t=-1===t.indexOf(e[0])?t.replace(/\$\(inherited\)/,r=>r+` ${e[0]}=${o?0:1}`):t.replace(new RegExp(`${e[0]}=(0|1)`),`${e[0]}=${o?0:1}`)})(e)}),o.writeFileSync(e,t)}let re,oe,te,ie,ne;function ae(){re&&(oe=!0,n(re.pid,"SIGTERM",()=>{oe=!1}),re=null)}function se(e){let t=!1;if("ios"===w){t=o.readdirSync(r.join(e.dest,"frameworks/runtime-src/proj.ios_mac/")).some(e=>e.endsWith(".xcworkspace"))}return t}function le(e){Editor.log("Begin generate Android App Bundle...");let t="android-instant"===w,n=t?":game:bundle":"bundle",a=r.join(O,"frameworks/runtime-src/proj.android-studio"),s="win32"===process.platform?".\\gradlew.bat":"./gradlew";i(s,[`${n}${x?"Debug":"Release"}`],{cwd:a}).on("close",i=>{if(0===i){let e=r.join(a,`app/build/outputs/bundle/${x?"debug":"release"}/${_}.aab`);t&&(e=r.join(a,`game/build/outputs/bundle/${x?"debugFeature":"releaseFeature"}/game.aab`)),o.copySync(e,r.join(O,x?"simulator":"publish","android",`${_}-${x?"debug":"release"}.aab`))}else Editor.warn("generate Android App Bundle fail");e&&e()})}function ce(){te&&(n(te.pid),te=null)}function de(){ie&&(n(ie.pid),ie=null,Editor.Panel.close("simulator-debugger"))}module.exports={build:function(e,i){K(e,n=>{if(n=n||H())return i&&i(n),void 0;let a=X(e.apiLevel);if(a=a>0?a:U,!o.existsSync(O)){Editor.log("Creating native cocos project to ",O);let s="tempCocosProject",l=r.join(v,s);if(o.existsSync(l))try{t.sync(l,{force:!0})}catch(n){return i&&i(n),void 0}Editor.Ipc.sendToMain("builder:state-changed","creating native project",.05);let c=T(["new",s,"-l","js","-d",v,"-t",b,"--env",h]);return c.error?(i&&i(c.error),void 0):(q(c.child,(t,n)=>t?(i&&i(t),void 0):0!==n?(i&&i(new Error("Failed to create project with exitCode : "+n)),void 0):(o.rename(l,O,t=>{if(t)return i&&i(t),void 0;B(E,t=>{let n=r.join(t.templatesPath,"js-template-"+b),l=r.join(n,"cocos-project-template.json"),c=r.join(O,"cocos-project-template.json");o.copySync(l,c);try{(function(e,t){let i=r.join(O,".cocos-project.json"),n=JSON.parse(o.readFileSync(i));n.projectName=e,n.packageName=t,o.writeFileSync(i,JSON.stringify(n,null,2))})(s,"org.cocos2dx."+s),void("win32"!==process.platform&&[r.join(O,"frameworks/runtime-src/proj.android-studio/app/jni/Application.mk")].forEach(e=>{let r=o.readFileSync(e,"utf8").split("\n");for(let e=0;e<r.length;e++){let o=r[e];o.match(/\bAPP_SHORT_COMMANDS\b.*:=.*true/)&&(r[e]="#"+o)}o.writeFileSync(e,r.join("\n"))})),G(),function(){if("android-instant"!==b){let e=r.join(O,`frameworks/runtime-src/proj.ios_mac/${_}.xcodeproj/project.pbxproj`);if(o.existsSync(e)){let t=o.readFileSync(e,"utf8");t=t.replace(/\/Applications\/CocosCreator.app\/Contents\/Resources\/cocos2d-x/g,r.resolve(j)),o.writeFileSync(e,t)}else Editor.warn(`Can't find path [${e}]. Replacing project file failed`)}let e=[r.join(O,"frameworks/runtime-src/proj.android-studio/build-cfg.json"),r.join(O,"frameworks/runtime-src/proj.android-studio/settings.gradle"),r.join(O,"frameworks/runtime-src/proj.android-studio/app/build.gradle")];"android-instant"!==b&&(e.push(r.join(O,"frameworks/runtime-src/proj.win32/build-cfg.json")),e.push(r.join(O,`frameworks/runtime-src/proj.win32/${_}.vcxproj`)),e.push(r.join(O,`frameworks/runtime-src/proj.win32/${_}.sln`))),"link"===b&&(e.push(r.join(O,"frameworks/runtime-src/proj.ios_mac/ios/UserConfigIOS.debug.xcconfig")),e.push(r.join(O,"frameworks/runtime-src/proj.ios_mac/ios/UserConfigIOS.release.xcconfig")),e.push(r.join(O,"frameworks/runtime-src/proj.ios_mac/mac/UserConfigMac.debug.xcconfig")),e.push(r.join(O,"frameworks/runtime-src/proj.ios_mac/mac/UserConfigMac.release.xcconfig"))),e.forEach(e=>{if(!o.existsSync(e))return Editor.warn(`Replace file [${e}] not find.`),void 0;let t=o.readFileSync(e,"utf8"),i=r.resolve(j),n=r.basename(e);"build-cfg.json"!==n&&"settings.gradle"!==n&&"build.gradle"!==n||(i=i.replace(/\\/g,"/")),t=(t=t.replace(/\$\{COCOS_X_ROOT\}/g,i)).replace(/\$\(COCOS_X_ROOT\)/g,i),o.writeFileSync(e,t)})}(),W(),z(e),Y(e.orientation,a),Z(e)}catch(e){return i&&i(e),void 0}i&&i()})}),void 0)),void 0)}try{W(),G(),z(e),Y(e.orientation,a),function(){let e=r.join(O,".cocos-project.json");if(!o.existsSync(e))return Editor.failed(`Can't find project json [${e}]`),void 0;let t=JSON.parse(o.readFileSync(e)).engine_version;t!==L&&Editor.failed(`Project version [${t}] not match cocos2d-x-lite version [${L}]. Please delete your build path, then rebuild project.`)}(),Z(e)}catch(n){return i&&i(n),void 0}i&&i()})},compile:function(e,r){Editor.Ipc.sendToMain("builder:state-changed","init settings",0),K(e,t=>{if(t=t||H())return r&&r(t),void 0;if(!o.existsSync(O))return r&&r(new Error(`Can't find ${O}, please first build project`)),void 0;Editor.Ipc.sendToMain("builder:state-changed","compile native",.1),Editor.log("Start to compile native project. Please wait..."),Editor.log(`The log file path [ ${f} ]`);let i=["compile","-p","android-instant"===w?"android":w,"-m",x?"debug":"release","--compile-script",0,"--env",h],n={cwd:O};"android-instant"===w&&i.push("--instant-game"),se(e)&&i.push("--xcworkspace");let a=U;if("android"===w||"android-instant"===w){if(i.push("--android-studio"),e.apiLevel){let r=X(e.apiLevel);r>0&&(i.push("--ap"),i.push(e.apiLevel),a=r)}e.appABIs&&e.appABIs.length>0&&(i.push("--app-abi"),i.push(e.appABIs.join(":")))}if("win32"===w){let r="";r="auto"===e.vsVersion?"2015":e.vsVersion,i.push("--vs"),i.push(r)}Y(e.orientation,a);let s=T(i,n);if(s.error)return r&&r(s.error),void 0;let l=.1;function c(){(l+=5e-4)>.9&&(l=.9),Editor.Ipc.sendToMain("builder:state-changed","compile native",l)}(re=s.child).stdout.on("data",()=>{c()}),re.stderr.on("data",()=>{c()}),q(re,async(o,t,i)=>{if(o)return r&&r(o),void 0;if(re=null,0===t)!e.appBundle||"android-instant"!==w&&"android"!==w||await p(le)(),Editor.Ipc.sendToMain("builder:state-changed","finish",1),Editor.log("Compile native project successfully.");else{if(!oe&&"SIGTERM"!==i)return r&&r(new Error(`Compile failed. The log file path [ ${f} ]`)),void 0;Editor.log("Compile native project exited normal")}r&&r()})})},encryptJsFiles:function(e,i,n){K(e,a=>{if(a)return n&&n(a),void 0;if(!o.existsSync(O))return n&&n(new Error(`Can't find ${O}, please first build project`)),void 0;if(!e.xxteaKey)return n&&n(new Error("xxtea key is empty.")),void 0;(function(e){let t=r.join(O,"frameworks/runtime-src/Classes/AppDelegate.cpp");if(!o.existsSync(t))return Editor.warn(`Can't find path [${t}]`),void 0;let i=o.readFileSync(t,"utf8").split("\n");for(let r=0;r<i.length;r++)-1!==i[r].indexOf("jsb_set_xxtea_key")&&(i[r]=`    jsb_set_xxtea_key("${e.xxteaKey}");`);o.writeFileSync(t,i.join("\n"))})(e);let s=[r.join(O,"src","**/*.js")];if(i)for(let e in i)s.push(r.join(O,i[e].path,"*.js"));l(s,(i,a)=>{if(i)return n&&n(i),void 0;a.forEach(i=>{i=r.normalize(i);try{let n=o.readFileSync(i,"utf8");e.zipCompressJs?(n=d.gzipSync(n),n=c.encrypt(n,c.toBytes(e.xxteaKey))):n=c.encrypt(c.toBytes(n),c.toBytes(e.xxteaKey)),o.writeFileSync(r.join(r.dirname(i),r.basenameNoExt(i))+".jsc",n),t.sync(i,{force:!0})}catch(e){Editor.warn(e)}}),n&&n()})})},run:function(e,t){ce(),Editor.log("Start to run project"),K(e,n=>{if(n)return t&&t(n),void 0;if(!o.existsSync(O))return t&&t(new Error(`Can't find ${O}, please first build project`)),void 0;Editor.log("Start to run project. Please wait..."),Editor.log(`The log file path [ ${f} ]`);let a=["run","-p","android-instant"===w?"android":w,"-m",x?"debug":"release","--env",h,"--compile-script",0],s={cwd:O};if("android-instant"===w){let r=e["android-instant"];a.push("--instant-game"),r.scheme&&r.host&&r.pathPattern&&(a.push("--launch-url"),a.push(`${r.scheme}://${r.host}${r.pathPattern}`))}se(e)&&a.push("--xcworkspace");let l=U;if("android"===w||"android-instant"===w){if(a.push("--android-studio"),e.apiLevel){let r=X(e.apiLevel);r>0&&(a.push("--ap"),a.push(e.apiLevel),l=r)}e.appABIs&&e.appABIs.length>0&&(a.push("--app-abi"),a.push(e.appABIs.join(":")))}if("win32"===w&&"auto"!==e.vsVersion&&(a.push("--vs"),a.push(e.vsVersion)),Y(e.orientation,l),"win32"===process.platform&&"win32"===w){let e;e=x?r.join(O,"simulator/win32",_+".exe"):r.join(O,"publish/win32",_+".exe");try{te=i(e,{},s)}catch(n){return t&&t(n),void 0}}else{let e=T(a,s);if(e.error)return t&&t(e.error),void 0;te=e.child}q(te,(e,r)=>e?(t&&t(e),void 0):0!==r?(t&&t(new Error(`Failed to run project. The log file path [ ${f} ]`)),void 0):(t&&t(),void 0))})},runSimulator:function(n){de();let s,l,c,d=Editor.Profile.load("profile://global/settings.json").data;d&&d["simulator-debugger"]&&Editor.Panel.open("simulator-debugger");let p=Editor.url("unpack://static/simulator/"),f="utf-8";"darwin"===process.platform?(c=Editor.url("unpack://simulator/mac/Simulator.app"),s=r.join(c,"Contents/MacOS/Simulator"),l=r.join(c,"Contents/Resources")):"win32"===process.platform&&(c=Editor.url("unpack://simulator/win32"),s=r.join(c,"Simulator.exe"),l=c);let m=Editor.url("unpack://engine/bin");[{src:Editor.url("unpack://static/preview-templates/modular.js"),dst:r.join(l,"src/modular.js")},{src:r.join(m,"cocos2d-jsb-for-preview.js"),dst:r.join(l,"src/cocos2d-jsb.js")},{src:r.join(p,"asset-record-pipe.js"),dst:r.join(l,"src/asset-record-pipe.js")},{src:r.join(p,"simulator-config.js"),dst:r.join(l,"src/simulator-config.js")},{src:Editor.url("packages://jsb-adapter/bin"),dst:r.join(l,"jsb-adapter")}].forEach(e=>{o.copySync(e.src,e.dst)});let g=r.join(Editor.Project.path,"temp/internal"),E=Editor.url("unpack://static/default-assets");t.sync(g,{force:!0}),o.copySync(E,g),a.series([e=>{if(n){o.ensureDirSync(n.recordPath),o.emptyDirSync(n.recordPath),"win32"===process.platform&&(n.recordPath=n.recordPath.replace(/\\/g,"/"));let e=o.readFileSync(r.join(p,"simulator-config.js"),"utf-8");e=(e=e.replace(/CC_SIMULATOR_RECORD_MODE\s=\sfalse/g,"CC_SIMULATOR_RECORD_MODE = true")).replace(/CC_SIMULATOR_RECORD_PATH\s=\s""/g,`CC_SIMULATOR_RECORD_PATH = "${n.recordPath}"`),o.writeFileSync(r.join(l,"src/simulator-config.js"),e)}e()},e=>{let t=o.readFileSync(r.join(p,"main.js"),"utf-8"),i=r.join(Editor.Project.path,"library/imports"),n=Editor.Project.path,a=Editor.QuickCompiler.getTempPath();"win32"===process.platform&&(i=i.replace(/\\/g,"/"),n=n.replace(/\\/g,"/"),a=a.replace(/\\/g,"/")),t=(t=(t=t.replace(/{libraryPath}/g,`'${i}/'`)).replace(/{rawAssetsBase}/g,`'${n}/'`)).replace(/{tempScriptsPath}/g,`'${a}/'`);let s=u.getSimulatorConfigAt();s&&s.init_cfg.waitForConnect&&(t="debugger\n"+t),o.writeFileSync(r.join(l,"main.js"),t),e()},e=>{var t=Editor.isWin32?"win32":"mac";Editor.PreviewServer.query("settings.js",t,(t,i)=>{if(t)return e(t),void 0;let n=i;n=n.replace(/"?internal"?:/,'"temp/internal":'),o.writeFileSync(r.join(l,"src/settings.js"),n),e()})},e=>{let t=r.join(l,"preview-scene.json");Editor.PreviewServer.getPreviewScene(function(r){e(r)},function(r){o.writeFile(t,r,e)},function(r){o.copy(r,t,e)})},e=>{J((r,o)=>{f=o,e(r)})}],r=>{if(r)return Editor.failed(r),void 0;let o=["-workdir",l,"-writable-path",l,"-console","false","--env",h];try{ie=i(s,o)}catch(r){return Editor.error(r),void 0}let t=(e,r)=>{if(e)return Editor.error(e),void 0;0===r&&(ie=null)};ie.stderr.on("data",r=>{let o;(o="win32"===process.platform?e.decode(r,f):r.toString()).length>1&&(o=o.replace(/\n*$/g,""));let t="error";-1!==o.toLowerCase().indexOf("warning")&&(t="warn"),Editor.Ipc.sendToPanel("scene","scene:print-simulator-log",o,t)}),ie.stdout.on("data",r=>{let o;(o="win32"===process.platform?e.decode(r,f):r.toString()).length>1&&(o=o.replace(/\n*$/g,"")),o.split("\n").forEach(e=>{Editor.Ipc.sendToPanel("scene","scene:print-simulator-log",e)})}),ie.on("close",(e,r)=>{t.call(ie,null,e,r),Editor.Panel.close("simulator-debugger")}),ie.on("error",function(e){t.call(ie,e),Editor.Panel.close("simulator-debugger")})})},saveKeystore:function(e,n){let a="keytool";if("win32"===process.platform){if(!process.env.JAVA_HOME||!o.existsSync(process.env.JAVA_HOME))return n&&n(new Error("Please make sure java is installed and JAVA_HOME is in your environment")),void 0;if(a=r.join(process.env.JAVA_HOME,"bin/keytool.exe"),!o.existsSync(a))return n&&n(new Error(`Can't find path [${a}]. Please make sure JAVA_HOME is in your environment and exists`)),void 0}let s=e.dest;o.existsSync(s)&&t.sync(s,{force:!0});let l=[];e.commonName&&l.push(`CN=${e.commonName}`),e.organizationalUnit&&l.push(`OU=${e.organizationalUnit}`),e.organization&&l.push(`O=${e.organization}`),e.locality&&l.push(`L=${e.locality}`),e.state&&l.push(`S=${e.state}`),e.country&&l.push(`C=${e.country}`),l=l.join(",");let c=["-genkey","-keyalg","RSA","-keysize","1024","-validity",e.validity,"-keystore",r.basename(s),"-storepass",e.password,"-alias",e.alias,"-keypass",e.aliasPassword,"-dname",l];Editor.log("Creating keystore : ",c.join(" "));let d,p={cwd:r.dirname(s)};try{d=i(a,c,p)}catch(e){return n&&n(e),void 0}q(d,(e,r)=>e?(n&&n(e),void 0):0!==r?(n&&n(new Error("Failed to create keystore, please check the log information")),void 0):(n(),void 0))},openNativeLogFile:function(){o.ensureFileSync(f),s.shell.openItem(f)},stopCompile:ae,getCocosTemplates:function(e){let o=Editor.Profile.load("profile://local/settings.json"),t=o.data;!1!==o.data["use-global-engine-setting"]&&(t=Editor.Profile.load("profile://global/settings.json").data),t["use-default-cpp-engine"]?(j=Editor.builtinCocosRoot,Editor.dev&&!j&&Editor.error("Can not find builtin cocos2d-x, please run 'gulp update-externs'.")):(j=t["cpp-engine-path"])||Editor.error("Can not find cocos engine."),B(r.join(j,"tools","cocos2d-console","bin"),r=>{e&&e(null,r.templates)})},getAndroidAPILevels:function(e){let t=Editor.App._profile.data["android-sdk-root"];if(!o.isDirSync(t))return e(null,[]),void 0;let i=r.join(t,"platforms","android-*");l(i,(t,i)=>{let n=[];i.forEach(e=>{e=r.normalize(e);let t=r.basename(e);X(t)>=U&&o.isDirSync(e)&&n.push(t)}),e&&e(null,n)})},getAndroidInstantAPILevels:function(e){let t=Editor.App._profile.data["android-sdk-root"];if(!o.isDirSync(t))return e(null,[]),void 0;let i=r.join(t,"platforms","android-*");l(i,(t,i)=>{let n=[];i.forEach(e=>{e=r.normalize(e);let t=r.basename(e);X(t)>=V&&o.isDirSync(e)&&n.push(t)}),e&&e(null,n)})},stop:function(){ae(),ce(),de(),ne&&(n(ne.pid),ne=null)},showLogInConsole:m,getCocosSpawnProcess:T,getCocosRoot:D};