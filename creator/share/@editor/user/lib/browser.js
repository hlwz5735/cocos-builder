"use stirct";const{EventEmitter:e}=require("events"),{network:s}=require("../utils"),t=require("../../../@base/electron-base-ipc"),o=require("../package.json"),i=`${o.name}@${o.version}`;let a={};let c=module.exports=new class extends e{setData(e){a=e}getData(){return a}async isLoggedIn(){if(!a.session_key)return!1;let e;try{e=await s.sendPostRequest("https://creator-api.cocos.com/api/account/is_online",{session_key:a.session_key})}catch(e){const s={source:"isLoggedIn",code:-1,msg:e.message};return this.emit("exception",s),t.broadcast(`${i}:emit`,"exception",s),!1}return 0==e.status&&(a.session_id=e.data.session_id,a.session_key=e.data.session_key,a.cocos_uid=e.data.cocos_uid,a.email=e.data.email,a.nickname=e.data.nickname,this.emit("info-update"),t.broadcast(`${i}:emit`,"info-update"),!0)}async login(e,o){let c;try{c=await s.sendPostRequest("https://creator-api.cocos.com/api/account/signin",{username:e,password:o})}catch(e){const s={source:"login",code:-1,msg:e.message};throw"ENOTFOUND"===e.code&&(s.code=999),this.emit("exception",s),t.broadcast(`${i}:emit`,"exception",s),e}if(0!=c.status){const e={source:"login",code:c.status,msg:c.msg};throw this.emit("exception",e),t.broadcast(`${i}:emit`,"exception",e),new Error(c.msg)}return a.session_id=c.data.session_id,a.session_key=c.data.session_key,a.cocos_uid=c.data.cocos_uid,a.email=c.data.email,a.nickname=c.data.nickname,this.emit("login"),t.broadcast(`${i}:emit`,"login"),{nickname:a.nickname,email:a.email}}async logout(){let e;try{e=await s.sendPostRequest("https://creator-api.cocos.com/api/user/signout",{session_id:a.session_id})}catch(e){const s={source:"logout",code:-1,msg:e.message};throw this.emit("exception",s),t.broadcast(`${i}:emit`,"exception",s),e}if(0!=e.status)throw new Error(e.msg);return this.emit("logout"),t.broadcast(`${i}:emit`,"logout"),a={},!0}async getUserToken(){let e;try{e=await s.sendPostRequest("https://creator-api.cocos.com/api/user/cocos_token",{session_id:a.session_id})}catch(e){const s={source:"getUserToken",code:-1,msg:e.message};throw this.emit("exception",s),t.broadcast(`${i}:emit`,"exception",s),e}if(0!=e.status)throw new Error(e.msg);return e.data}async getSessionCode(e){let o;try{o=s.sendPostRequest("https://creator-api.cocos.com/api/session/code",{session_id:a.session_id,plugin_id:e})}catch(e){let s={source:"getSessionCode",code:-1,msg:e.message};throw this.emit("exception",s),t.broadcast(`${i}:emit`,"exception",s),e}if(0!=o.status)throw new Error(o.msg);return o.data}};t.on(`${i}:call`,async(e,s,...t)=>{let o,i=c[s];try{o=await i.call(c,...t)}catch(s){return e.reply(s,null),void 0}e.reply(null,o)});