"use strict";const e=require("../../@base/electron-base-ipc"),r=require("../../@editor/user"),{EventEmitter:t}=require("events");module.exports=new class extends t{constructor(){super(),this._enable=e.sendSync("creator-lib-user:query","_enable")}enable(r){return void 0!==r&&(e.send("creator-libs-user:call","enable",!!r),this._enable=!!r),this._enable}async isLoggedIn(r){return r&&Editor.warn("'isLoggedIn' returns a standard 'promise' , please use 'await' to wait for the data"),e.send("creator-libs-user:call","isLoggedIn").promise()}async login(r,t){return e.send("creator-libs-user:call","login",r,t).promise()}async logout(){return e.send("creator-libs-user:call","logout").promise()}async getUserToken(){return await r.getUserToken()}async getSessionCode(e,t){return t&&Editor.warn("'getSessionCode' returns a standard 'promise' , please use 'await' to wait for the data"),await r.getSessionCode(e)}},e.on("creator-lib-user:emit",(e,r)=>{module.exports.emit(r)}),e.on("creator-lib-user:flag",(e,r,t)=>{module.exports[r]=t});let o=require("../element/login-frame");window.customElements.define("login-frame",o),r.on("login",()=>{module.exports.emit("login")}),r.on("logout",()=>{module.exports.emit("logout")}),r.on("exception",e=>{module.exports.emit("exception",e)});