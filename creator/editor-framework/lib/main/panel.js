"use strict";let e={};module.exports=e;const n=require("electron"),i=require("./window"),t=require("./console"),o=require("./package");e.templateUrl="editor-framework://static/window.html",e.open=function(n,l){"string"==typeof n&&(n=[n]);let r=[];for(let e=0;e<n.length;++e){let i=n[e];o.panelInfo(i)?r.push(i):t.error(`Failed to open panel ${i}, panel info not found.`)}if(0===r.length)return;let a=r[0],d=o.panelInfo(a),p=e.findWindow(a);if(p)return p.show(),p.focus(),p.send("editor:panel-run",a,l),void 0;let s=`window-${(new Date).getTime()}`,h=!0;"simple"===d.type&&(h=d.devTools);let f={useContentSize:!0,width:parseInt(d.width),height:parseInt(d.height),minWidth:parseInt(d["min-width"]),minHeight:parseInt(d["min-height"]),maxWidth:parseInt(d["max-width"]),maxHeight:parseInt(d["max-height"]),frame:d.frame,resizable:d.resizable,save:void 0===d.save||d.save,webPreferences:{devTools:h}},u=!0,w=i.getPanelWindowState(a);w&&(w.x&&(f.x=parseInt(w.x)),w.y&&(f.y=parseInt(w.y)),w.width&&(u=!1,f.width=parseInt(w.width)),w.height&&(u=!1,f.height=parseInt(w.height))),f.windowType=d.type||"dockable",f.resizable||(u=!0,f.width=parseInt(d.width),f.height=parseInt(d.height)),isNaN(f.width)&&(f.width=400),isNaN(f.height)&&(f.height=400),isNaN(f.minWidth)&&(f.minWidth=200),isNaN(f.minHeight)&&(f.minHeight=200),(p=new i(s,f)).nativeWin.setMenuBarVisibility(!1),u?p.nativeWin.setContentSize(f.width,f.height):p.nativeWin.setSize(f.width,f.height);let c=[];for(let n=0;n<r.length;++n){let i=r[n];e.findWindow(i)||(p._addPanel(i),c.push(i))}if("simple"===d.type){let e=a.split(".");p.load(`packages://${e[0]}/${d.main}`,l)}else p._layout={type:"dock-v",children:[{type:"panel",active:0,children:c}]},p.load(e.templateUrl,{panelID:a,panelArgv:l});p.focus()},e.close=function(n,i){let l=e.findWindow(n);if(!l)return i&&i(new Error(`Can not find panel ${n} in main process.`)),void 0;let r=o.panelInfo(n);return r?"simple"===r.type?(l.close(),i&&i(null,!0),void 0):(l.send("editor:panel-unload",n,(e,t)=>e?(i&&i(e),void 0):t?(l.isMainWindow||1!==l.panels.length||l.close(),l._removePanel(n),i&&i(null,!0),void 0):(i&&i(null,!1),void 0),-1),void 0):(t.error(`Failed to close panel ${n}, panel info not found.`),void 0)},e.popup=function(n){let i=e.findWindow(n);i&&(i.panels.length<=1||e.close(n,(i,o)=>{if(i)return t.error(`Failed to close panel ${n}: ${i.stack}`),void 0;o&&e.open(n)}))},e.findWindow=function(e){for(let n=0;n<i.windows.length;++n){let t=i.windows[n];if(-1!==t.panels.indexOf(e))return t}return null};const l=n.ipcMain;l.on("editor:panel-query-info",(e,n)=>{if(!n)return t.error("A `editor:panel-query-info` message failed because the panelID is null or undefined."),e.reply(new Error("Invalid panelID")),void 0;let i=o.panelInfo(n);if(!i)return e.reply(new Error(`Panel info not found for panel ${n}`)),void 0;e.reply(null,i)}),l.on("editor:panel-open",(n,i,t)=>{e.open(i,t)}),l.on("editor:panel-dock",(e,t)=>{let o=n.BrowserWindow.fromWebContents(e.sender);i.find(o)._addPanel(t)}),l.on("editor:panel-close",(n,i)=>{e.close(i,(e,i)=>{n.reply&&n.reply(e,i)})}),l.on("editor:panel-popup",(n,i)=>{e.popup(i)});